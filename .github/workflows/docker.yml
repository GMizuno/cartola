name: Build and Push to Artifact Registry Geral

on:
  push:
    branches:
      - 'main'

env:
  PROJECT_ID: cartola-360814
  REGION: us-east1
  GAR_LOCATION: us-east1-docker.pkg.dev/cartola-360814/cartola-project/cartola-python

jobs:
#  tags_versions:
#    runs-on: ubuntu-latest
#    outputs:
#      tag_teams: ${{ steps.teams.outputs.tag }}
#      tag_matchs: ${{ steps.matchs.outputs.tag }}
#      tag_players: ${{ steps.players.outputs.tag }}
#      tag_statistics: ${{ steps.statistics.outputs.tag }}
#    steps:
#      - id: github-sha
#        run: |-
#          echo "VERSION=$(echo $(date +'%Y%m%d'))" >> $GITHUB_ENV
#      - id: matchs
#        env:
#          TYPE: matchs
#        run: echo "tag=${{ env.GAR_LOCATION }}-${{ env.TYPE }}:$VERSION" >> $GITHUB_OUTPUT
#      - id: teams
#        env:
#          TYPE: teams
#        run: echo "tag=${{ env.GAR_LOCATION }}-${{ env.TYPE }}:$VERSION" >> $GITHUB_OUTPUT
#      - id: players
#        env:
#          TYPE: players
#        run: echo "tag=${{ env.GAR_LOCATION }}-${{ env.TYPE }}:$VERSION" >> $GITHUB_OUTPUT
#      - id: statistics
#        env:
#          TYPE: statistics
#        run: echo "tag=${{ env.GAR_LOCATION }}-${{ env.TYPE }}:$VERSION" >> $GITHUB_OUTPUT
#  docker_registry:
#    runs-on: ubuntu-latest
#    needs: [ tags_versions ]
#    strategy:
#      max-parallel: 6
#      matrix:
#        include:
#          - IMG: ${{ needs.tags_versions.outputs.tag_teams }}
#            TYPE: teams
#          - IMG: ${{ needs.tags_versions.outputs.tag_matchs }}
#            TYPE: matchs
#          - IMG: ${{ needs.tags_versions.outputs.tag_players }}
#            TYPE: players
#          - IMG: ${{ needs.tags_versions.outputs.tag_statistics }}
#            TYPE: statistics
#    steps:
#      - name: "Print variables"
#        run: |-
#          echo TYPE: ${{ matrix.TYPE }} IMG: ${{ matrix.IMG }}
#
#      - name: "Checkout"
#        uses: "actions/checkout@v3"
#
#      - id: "Auth"
#        uses: "google-github-actions/auth@v1"
#        with:
#          credentials_json: "${{ secrets.SERVICE_ACCOUNT_KEY }}"
#
#      - name: "Set up Cloud SDK"
#        uses: "google-github-actions/setup-gcloud@v1"
#
#      - name: "Docker auth"
#        run: |-
#          gcloud auth configure-docker ${{ env.REGION }}-docker.pkg.dev --quiet
#
#      - name: "Build image"
#        run: |-
#          docker build . --file ./docker_images/${{ matrix.TYPE }}.Dockerfile \
#                         --platform linux/amd64 --tag ${{ matrix.IMG }}
#
#      - name: "Push image"
#        run: |-
#          docker push ${{ matrix.IMG }}

  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest
#    needs: [docker_registry]
    defaults:
      run:
        shell: bash
        working-directory: terraform
    steps:
      - name: "Checkout"
        uses: actions/checkout@v3
      - name: Setup Terraform
        run: hashicorp/setup-terraform@v3
      - name: Terraform Init
        run: terraform init
      - name: Terraform Plan
        run: terraform plan -input=false
      - name: Terraform apply
        run: terraform apply -auto-approve -input=false